/*
#
#  foundation_installer.mel
#  mayaPyTools
#
#  Created by Jon Lauridsen on 10/6/08.
#  Copyright (c) Jon Lauridsen. All rights reserved.
#
*/


/* ==== DEFAULT SHARED FOLDER SUGGESTIONS S==== */
string $FOUNDATION_DEFAULT_PATHS[];
$FOUNDATION_DEFAULT_PATHS[0] = "p:/shared/";
$FOUNDATION_DEFAULT_PATHS[1] = "s:";
$FOUNDATION_DEFAULT_PATHS[2] = "~/projects/shared maya tools";
/* ==== DO NOT EDIT FURTHER ==== */


global proc __foundation_runPythonInstaller__() {
	string $dir = __foundation_getUserScriptDir__();
	string $pyInstaller = "foundation_installer.py";

	string $fileName = $dir + $pyInstaller;
	string $content = __foundation_getPayload__();

	/* Create the Python payload file and fill it with content */
	$fileId = `fopen $fileName "w"`;
	fprint $fileId $content;
	fclose $fileId;
	print("Wrote file: " + $fileName + "\n");

	string $cmd = "try: reload(foundation_installer)\nexcept NameError: import foundation_installer";
	python( $cmd );

	/* After completing the script we delete the Python payload file and its
	associated .pyc file */
	sysFile -delete $fileName;
	sysFile -delete ($fileName + "c");
}

global proc string __foundation_getUserScriptDir__() {
	string $path;
	if( `about -windows`) {
		$path = `internalVar -userPrefDir`;
		$path = $path + "scripts/";
		string $r[] = `file -query -type $path`;
		if( $r[0] == "directory" ) { print "Windows check OK\n"; }
	} else if( `about -mac`) {
		$path = `internalVar -userScriptDir`;
	} else {
		error( "Could not locate user script directory. Installer can only detect Windows and Mac" );
	}
	return $path;
}

global proc string __foundation_getPayload__() {
	string $content = "#!/usr/bin/env python\n#\n# foundation_installer.py\n# mayaPyTools\n\"\"\"NOTE: Upon module load the Foundation installer is automatically initialized!\n\nThis is done to ease the initialization of the installer because it shifts the\ncode completely into Python domain instead of relying on fickle MEL to get\nstarted\"\"\"\n\nfrom collections import defaultdict\nimport webbrowser\nimport datetime\nimport os.path\nimport sys\nimport re\nimport maya.cmds as mc\nimport maya.mel\nimport traceback\n\n\n# Instantiate logger class\nimport logging\nL = logging.getLogger( __name__ )\nL.setLevel(logging.ERROR)\n#if not L.handlers:\n#\tch = logging.StreamHandler()\n#\tch.setFormatter( logging.Formatter(\"%(name)s : %(levelname)s : %(message)s\") )\n#\tL.addHandler(ch)\n\n\n# Custom exceptions\nclass FoundationException(Exception):\n\tdef __init__(self, value): self.value = value\n\tdef __str__(self): return repr(self.value)\n\nclass UnknownPlatformException(FoundationException):\n\tdef __init__(self): self.value = \"Could not detect platform\"\n\tdef __str__(self): return repr(self.value)\n\n\nclass Observable(defaultdict):\n\t\"\"\"Observer class designed for lightweight messaging.\"\"\"\n\tdef __init__ (self):\n\t\tdefaultdict.__init__(self, object)\n\n\tdef emit (self, *args):\n\t\t'''Pass parameters to all observers and update states.'''\n\t\ttopic = args[0]\n\t\tfor subscriber in self:\n\t\t\tif not self[subscriber] or self[subscriber] == topic:\n\t\t\t\ttry:\n\t\t\t\t\tresponse = subscriber(*args)\n\t\t\t\t\tL.debug( \"Emitted message '%s' to '%s'\" % (\n\t\t\t\t\t\targs, subscriber\n\t\t\t\t\t) )\n\t\t\t\texcept:\n\t\t\t\t\tL.error( \"Exception while emitting message '%s' to '%s'\" % (\n\t\t\t\t\t\targs, subscriber\n\t\t\t\t\t) )\n\t\t\t\t\traise\n\n\tdef subscribe (self, subscriber, filter=None):\n\t\t'''Add a new subscriber to self.'''\n\t\tself[subscriber] = filter\nobs = Observable()\n\nclass View(object):\n\n\tdef __init__(self):\n\t\tself.prefs = self.Preferences()\n\n\t\t# Create our window\n\t\tself.window = self._createWindow()\n\t\tself.baseForm = self._createBaseForm()\n\n\t\tself.leftForm = self._createLeftForm(self.baseForm)\n\t\tself.steps = self.Steps(\n\t\t\tself,\n\t\t\tself.leftForm\n\t\t)\n\n\t\tself.rightForm = self._createRightForm(self.baseForm, self.leftForm)\n\n\t\tself.headline = self.Headline(self.rightForm)\n\n\t\tself.contentBackground = self._createContentBackground(\n\t\t\tself,\n\t\t\tself.rightForm,\n\t\t\tself.headline,\n\t\t\t235,\n\t\t)\n\n\t\tself.introductionPanel = self.IntroductionPanel(\n\t\t\tself,\n\t\t\tself.contentBackground,\n\t\t\tself.headline,\n\t\t)\n\n\t\tself.selectFolderPanel = self.SelectFolderPanel(\n\t\t\tself,\n\t\t\tself.contentBackground,\n\t\t\tself.headline,\n\t\t\tvisible=False,\n\t\t)\n\n\t\tself.summaryPanel = self.SummaryPanel(\n\t\t\tself,\n\t\t\tself.contentBackground,\n\t\t\tself.headline,\n\t\t\tvisible=False,\n\t\t)\n\n\t\tself.buttonGroup = self.ButtonGroup(\n\t\t\tself,\n\t\t\tself.rightForm,\n\t\t\tself.contentBackground,\n\t\t)\n\n\t\tmc.showWindow(self.prefs.window)\n\n\tclass Preferences(object):\n\t\tdef __init__(self):\n\t\t\tself.platform = getMayaPlatform()\n\t\t\tself.window = \"installerWindow\"\n\n\t\t\t# Width of window\n\t\t\tself.width = 532\n\n\t\t\t# Height of the part with \"-shared Python scripting...\"\n\t\t\tif self.platform == \"mac\": self.topHeight = 60\n\t\t\telse: self.topHeight = 50\n\n\n\t\t\tself.stageContentBorderSide = 10\n\t\t\tself.stageContentBorderTop = 10\n\t\t\tself.stageContentBorderBottom = 50\n\t\t\tself.stageDescr1to2Separation = 10\n\t\t\tself.stageHeadlineBorderTop = 15\n\t\t\tself.stageBorderBottom = 7\n\t\t\tself.pageBorderTop = 70\n\t\t\tself.pageEntryButtonSeparation = 15\n\n\t\t\tself.installationStatusHeight = 180\n\n\t\t\tself.installationStatusColor = [.5,1,.25]\n\t\t\tself.installationStatusShortText = \"Install succeeded\"\n\t\t\tself.installationStatusLongText = \"Awesome! Install succeeded.\\n\\nPlease restart Maya for changes to take effect. Enjoy.\"\n\n\t\t\tself.installationFailedStatusColor = [1,.25,.25]\n\t\t\tself.installationFailedStatusShortText = \"Install failed\"\n\t\t\tself.installationFailedStatusLongText = \"Dammit, Install failed.\\n\\nSee Installation details for, well, details.\"\n\n\t\t\tself.col_dark = [.18,.18,.18]\n\n\tdef _createWindow(self):\n\t\t# If the window already exists we delete it\n\t\tif mc.window(self.prefs.window, exists=True):\n\t\t\tmc.deleteUI(self.prefs.window)\n\n\t\t# Remove the window preference, if there is one. We want to make\n\t\t# sure the window comes up in its intended size and position.\n\t\tif mc.windowPref(self.prefs.window, exists=True):\n\t\t\tmc.windowPref(self.prefs.window, remove=True)\n\t\twindow = mc.window(\n\t\t\tself.prefs.window,\n\t\t\ttitle=\"maya foundation installer\",\n\t\t\tsizeable=False,\n\t\t\tminimizeButton=False,\n\t\t\tmaximizeButton=False,\n\t\t\twidth=self.prefs.width,\n\t\t)\n\t\treturn window\n\n\tdef closeWindow(self):\n\t\tmc.deleteUI(self.prefs.window, window=True)\n\n\tdef setResizeable(self, bool):\n\t\tmc.window(\n\t\t\tself.prefs.window,\n\t\t\tedit=True,\n\t\t\tsizeable=bool,\n\t\t\tmaximizeButton=bool,\n\t\t)\n\t\tmc.window(\n\t\t\tself.prefs.window,\n\t\t\tedit=True,\n\t\t\twidth=self.prefs.width + 1,\n\t\t)\n\t\tmc.window(\n\t\t\tself.prefs.window,\n\t\t\tedit=True,\n\t\t\twidth=self.prefs.width,\n\t\t)\n\n\tdef _createBaseForm(self):\n\t\treturn mc.formLayout()\n\n\tdef _createLeftForm(self, parent):\n\t\t# Left half of main window\n\t\tleftHalf = mc.columnLayout(\n\t\t)\n\t\tmc.formLayout(\n\t\t\tparent,\n\t\t\tedit=True,\n\t\t\tattachForm=[\n\t\t\t\t(leftHalf, 'top', self.prefs.pageBorderTop),\n\t\t\t\t(leftHalf, 'left', 5),\n\t\t\t\t(leftHalf, 'bottom', 5),\n\t\t\t]\n\t\t)\n\t\tmc.setParent('..')\n\t\treturn leftHalf\n\n\tdef _createRightForm(self, parent, leftAlign):\n\t\t# Right half of main window\n\t\trightHalf = mc.formLayout(\n\t\t)\n\t\tmc.formLayout(\n\t\t\tparent,\n\t\t\tedit=True,\n\t\t\tattachForm=[\n\t\t\t\t(rightHalf, 'top', self.prefs.stageHeadlineBorderTop),\n\t\t\t\t(rightHalf, 'right', 5),\n\t\t\t\t(rightHalf, 'bottom', self.prefs.stageBorderBottom),\n\t\t\t],\n\t\t\tattachControl=[\n\t\t\t\t(rightHalf, 'left', 5, leftAlign),\n\t\t\t]\n\t\t)\n\t\tmc.setParent('..')\n\t\treturn rightHalf\n\n\tdef _createContentBackground(self, owner, control_parent, leftTopAlign, height):\n\t\tpanel = mc.columnLayout(\n\t\t\tadjustableColumn=2,\n\t\t\tcolumnOffset=('both', self.prefs.stageContentBorderSide),\n\t\t\tbgc=owner.prefs.col_dark,\n\t\t\tparent=control_parent,\n\t\t\theight=height,\n\t\t)\n\t\tmc.formLayout(\n\t\t\tcontrol_parent,\n\t\t\tedit=True,\n\t\t\tattachForm=[\n\t\t\t\t(leftTopAlign, 'left', 5),\n\t\t\t\t(panel, 'left', 5),\n\t\t\t\t(panel, 'right', 5),\n\t\t\t\t(panel, 'bottom', 5),\n\t\t\t],\n\t\t\tattachControl=[\n\t\t\t\t(panel, 'top', 5, leftTopAlign),\n\t\t\t],\n\t\t)\n\t\tmc.setParent('..')\n\t\tmc.setParent('..')\n\t\treturn panel\n\n\tclass Steps(object):\n\t\tdef __init__(self, owner, control_parent):\n\t\t\t\"\"\"Create three pages entries\"\"\"\n\n\t\t\tmc.radioCollection(\n\t\t\t\t\"steps\"\n\t\t\t)\n\t\t\tself.intro = owner.StepElement(\n\t\t\t\towner,\n\t\t\t\tcontrol_parent,\n\t\t\t\t\"Introduction\",\n\t\t\t\tenable=True\n\t\t\t)\n\t\t\tself.selectFolder = owner.StepElement(\n\t\t\t\towner,\n\t\t\t\tcontrol_parent,\n\t\t\t\t\"Shared Folder select\",\n\t\t\t\tenable=False\n\t\t\t)\n\t\t\tself.summary = owner.StepElement(\n\t\t\t\towner,\n\t\t\t\tcontrol_parent,\n\t\t\t\t\"Summary\",\n\t\t\t\tenable=False\n\t\t\t)\n\t\tdef step1(self):\n\t\t\tself.intro.enable()\n\t\t\tself.selectFolder.disable()\n\t\t\tself.summary.disable()\n\t\tdef step2(self):\n\t\t\tself.intro.disable()\n\t\t\tself.selectFolder.enable()\n\t\t\tself.summary.disable()\n\t\tdef step3(self):\n\t\t\tself.intro.disable()\n\t\t\tself.selectFolder.disable()\n\t\t\tself.summary.enable()\n\t\tdef __str__(self):\n\t\t\treturn (self.intro, self.selectFolder, self.summary)\n\n\tclass Headline(object):\n\t\tdef __init__(self, parent):\n\t\t\tself.headline = mc.text(\n\t\t\t\tlabel=\"Welcome to the maya foundation installer\",\n\t\t\t\tfont='boldLabelFont',\n\t\t\t\tparent=parent,\n\t\t\t)\n\t\tdef setLabel(self, text):\n\t\t\tmc.text(\n\t\t\t\tself.headline,\n\t\t\t\tedit=True,\n\t\t\t\tlabel=text,\n\t\t\t)\n\t\tdef __str__(self):\n\t\t\treturn self.headline\n\n\tclass IntroductionPanel(object):\n\t\tdef __init__(self, owner, control_parent, setLabel_control, visible=None):\n\t\t\tself.owner = owner\n\t\t\tself.control_parent = control_parent\n\t\t\tself.setLabel_control = setLabel_control\n\n\t\t\tself.panel = mc.columnLayout(\n\t\t\t\tadjustableColumn=2,\n\t\t\t\tcolumnOffset=('both', owner.prefs.stageContentBorderSide),\n\t\t\t\tparent=control_parent,\n\t\t\t)\n\t\t\towner.spacer(owner.prefs.stageContentBorderTop)\n\t\t\tstageDescription1 = mc.text(\n\t\t\t\tlabel=\"maya foundation\\n- shared Python scripting environment made easy -\",\n\t\t\t\tfont='boldLabelFont',\n\t\t\t)\n\t\t\towner.spacer(owner.prefs.stageDescr1to2Separation)\n\t\t\tstageDescription = mc.text(\n\t\t\t\tlabel=\"maya foundation streamlines setting up a shared scripting environment for Maya. A shared scripting environment means all Maya installations load the same set of scripts, and that is an essential foundation for developing and maintaining your production tools.\\n\\nmaya foundation is free, open source, and licensed under the New BSD License meaning you can do with it as you please with no strings attached. For more information see:\",\n\t\t\t\tww=True,\n\t\t\t\tfont='plainLabelFont',\n\t\t\t\talign='left',\n\t\t\t\twidth=350,\n\t\t\t\theight=140,\n\t\t\t)\n\t\t\tself.webbutton = mc.button(\n\t\t\t\tlabel=\"foundation.jonlauridsen.com\",\n\t\t\t)\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\n\t\t\tif visible is not None:\n\t\t\t\tself.setVisible(visible)\n\n\t\tdef setVisible(self, bool):\n\t\t\tmc.layout(self.panel, edit=True, visible=bool)\n\t\t\tif bool:\n\t\t\t\tself.setLabel_control.setLabel(\n\t\t\t\t\t\"Welcome to the maya foundation installer\"\n\t\t\t\t\t)\n\n\t\tdef __str__(self):\n\t\t\treturn self.panel\n\n\tclass SelectFolderPanel(object):\n\t\tdef __init__(self, owner, control_parent, setLabel_control, visible=None):\n\t\t\tself.owner = owner\n\t\t\tself.control_parent = control_parent\n\t\t\tself.setLabel_control = setLabel_control\n\n\t\t\tself.panel = mc.columnLayout(\n\t\t\t\tadjustableColumn=2,\n\t\t\t\tcolumnOffset=('both', owner.prefs.stageContentBorderSide),\n\t\t\t\tparent=control_parent,\n\t\t\t)\n\t\t\towner.spacer(owner.prefs.stageContentBorderTop)\n\t\t\tstageDescription = mc.text(\n\t\t\t\tlabel=\"Select the path where shared scripts reside. This is often a place under version control (within a Perforce depot or an SVN repository) or a folder on a network drive.\\n\\nIf you're unsure which path to choose please consult your company's help documents, technical art department or network administrator.\",\n\t\t\t\tww=True,\n\t\t\t\tfont='plainLabelFont',\n\t\t\t\talign='left',\n\t\t\t\twidth=350,\n\t\t\t\theight=110,\n\t\t\t)\n\t\t\towner.spacer(owner.prefs.stageDescr1to2Separation)\n\t\t\tstageDescription1 = mc.text(\n\t\t\t\tlabel=\"Shared Scripting folder:\",\n\t\t\t\talign='left',\n\t\t\t\tfont='boldLabelFont',\n\t\t\t)\n\t\t\tself.sharedFolderButtonGroup = mc.textFieldButtonGrp(\n\t\t\t\tlabel=\"\",\n\t\t\t\ttext=\"\",\n\t\t\t\tbuttonLabel='Browse...',\n\t\t\t\tadjustableColumn=2,\n\t\t\t\tcolumnWidth=[1,0],\n\t\t\t)\n\n\t\t\towner.spacer(height=6)\n\t\t\tself.noFilesWritten = mc.rowLayout(\n\t\t\t\tnumberOfColumns=2,\n\t\t\t\tadjustableColumn=2,\n\t\t\t\tcolumnWidth2=[16,1],\n\t\t\t\tvisible=False\n\t\t\t)\n\t\t\tmc.text(\n\t\t\t\tlabel=\"*\"\n\t\t\t)\n\t\t\tmc.text(\n\t\t\t\tlabel=\"After installation Maya will use the pre-existing file 'sharedUserSetup.py' from this folder.\",\n\t\t\t\talign='left',\n\t\t\t\tww=True,\n\t\t\t\twidth=300,\n\t\t\t)\n\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\n\t\t\tif visible is not None:\n\t\t\t\tself.setVisible(visible)\n\n\t\tdef setVisible(self, bool):\n\t\t\tmc.layout(self.panel, edit=True, visible=bool)\n\t\t\tif bool:\n\t\t\t\tself.setLabel_control.setLabel(\n\t\t\t\t\t\"Choosing the Shared Scripting folder\"\n\t\t\t\t)\n\n\t\tdef setPathLabel(self, text):\n\t\t\tif text is None:\n\t\t\t\ttext = \"\"\n\t\t\tmc.textFieldButtonGrp(\n\t\t\t\tself.sharedFolderButtonGroup,\n\t\t\t\tedit=True,\n\t\t\t\ttext=text,\n\t\t\t)\n\n\t\tdef getPathLabel(self):\n\t\t\tpath = mc.textFieldButtonGrp(\n\t\t\t\tself.sharedFolderButtonGroup,\n\t\t\t\tquery=True,\n\t\t\t\ttext=True,\n\t\t\t)\n\t\t\treturn path\n\n\t\tdef setNoFilesWrittenVisible(self, bool):\n\t\t\tmc.layout(\n\t\t\t\tself.noFilesWritten,\n\t\t\t\tedit=True,\n\t\t\t\tvisible=bool,\n\t\t\t)\n\n\t\tdef __str__(self):\n\t\t\treturn self.panel\n\n\tclass SummaryPanel(object):\n\t\tdef __init__(self, owner, control_parent, setLabel_control, visible=None):\n\t\t\tself.owner = owner\n\t\t\tself.control_parent = control_parent\n\t\t\tself.setLabel_control = setLabel_control\n\n\t\t\tself.panel = mc.columnLayout(\n\t\t\t\tadjustableColumn=2,\n\t\t\t\tcolumnOffset=('both', owner.prefs.stageContentBorderSide),\n\t\t\t\tparent=control_parent,\n\t\t\t)\n\t\t\towner.spacer(owner.prefs.stageContentBorderTop)\n\n\n\t\t\tself.installationHeadline = mc.text(\n\t\t\t\tlabel=owner.prefs.installationStatusLongText,\n\t\t\t\tfont='boldLabelFont',\n\t\t\t\t#bgc=owner.prefs.installationStatusColor,\n\t\t\t\theight=owner.prefs.installationStatusHeight,\n\t\t\t)\n\n\t\t\towner.spacer(owner.prefs.stageDescr1to2Separation)\n\n\t\t\tself.installationFrameLayout = mc.frameLayout(\n\t\t\t\tlabel=\"Installation details\",\n\t\t\t\tcollapsable=True,\n\t\t\t\tcollapse=True,\n\t\t\t\twidth=350,\n\t\t\t\tborderStyle=\"in\",\n\t\t\t)\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\n\t\t\tif visible is not None:\n\t\t\t\tself.setVisible(visible)\n\n\t\tdef setVisible(self, bool):\n\t\t\tmc.layout(self.panel, edit=True, visible=bool)\n\t\t\tif bool:\n\t\t\t\tself.setLabel_control.setLabel(\n\t\t\t\t\t\"Installation completed successfully\"\n\t\t\t\t)\n\t\tdef setPathLabel(self, text):\n\t\t\tif text is None:\n\t\t\t\ttext = \"\"\n\t\t\tmc.textFieldButtonGrp(\n\t\t\t\tself.sharedFolderButtonGroup,\n\t\t\t\tedit=True,\n\t\t\t\ttext=text,\n\t\t\t)\n\t\tdef getPathLabel(self):\n\t\t\tpath = mc.textFieldButtonGrp(\n\t\t\t\tself.sharedFolderButtonGroup,\n\t\t\t\tquery=True,\n\t\t\t\ttext=True,\n\t\t\t)\n\t\t\treturn path\n\n\t\tdef setInstallationSuccess(self, success=True):\n\t\t\tif success:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tmc.text(\n\t\t\t\t\tself.installationHeadline,\n\t\t\t\t\tedit=True,\n\t\t\t\t\tbgc=self.owner.prefs.installationFailedStatusColor,\n\t\t\t\t)\n\t\t\t\tself.setInstallation_short(success=False)\n\t\t\t\tself.setInstallation_long(success=False)\n\n\n\t\tdef setInstallation_short(self, success=True):\n\t\t\tif success:\n\t\t\t\tt = self.owner.prefs.installationStatusShortText\n\t\t\telse:\n\t\t\t\tt = self.owner.prefs.installationFailedStatusShortText\n\n\n\t\t\tself._setInstallationHeadline(\n\t\t\t\tt, 20\n\t\t\t)\n\n\t\tdef setInstallation_long(self, success=True):\n\t\t\tif success:\n\t\t\t\tt = self.owner.prefs.installationStatusLongText\n\t\t\telse:\n\t\t\t\tt = self.owner.prefs.installationFailedStatusLongText\n\n\t\t\tself._setInstallationHeadline(\n\t\t\t\tt, self.owner.prefs.installationStatusHeight\n\t\t\t)\n\n\t\tdef _setInstallationHeadline(self, text, height):\n\t\t\tif text is None:\n\t\t\t\ttext = \"\"\n\t\t\tmc.text(\n\t\t\t\tself.installationHeadline,\n\t\t\t\tedit=True,\n\t\t\t\theight=height,\n\t\t\t\tlabel=text,\n\t\t\t)\n\n\t\tdef spawnInstallationDetails(self, text=None):\n\t\t\t\"\"\"Create UI elements to display installation summary details\"\"\"\n\t\t\tif mc.layout(\n\t\t\t\tself.installationFrameLayout,\n\t\t\t\tquery=True,\n\t\t\t\tnumberOfChildren=True\n\t\t\t) == 0:\n\n\t\t\t\tif text is None:\n\t\t\t\t\ttext = \"\"\n\n\t\t\t\tmc.columnLayout(\n\t\t\t\t\tparent=self.installationFrameLayout,\n\t\t\t\t\tadjustableColumn=1,\n\t\t\t\t)\n\n\t\t\t\tlog = mc.scrollField(\n\t\t\t\t\tww=True,\n\t\t\t\t\teditable=False,\n\t\t\t\t\tfont='smallPlainLabelFont',\n\t\t\t\t\ttext=text,\n\t\t\t\t\theight=10000, # Tall enough to never run out of height\n\t\t\t\t)\n\n\t\tdef __str__(self):\n\t\t\treturn self.panel\n\n\tclass ButtonGroup(object):\n\t\tdef __init__(self, owner, control_parent, alignBottom):\n\t\t\tself.buttonGroup = mc.rowLayout(\n\t\t\t\tnumberOfColumns=3,\n\t\t\t\tadjustableColumn=1,\n\t\t\t\tparent=control_parent,\n\t\t\t)\n\n\t\t\towner.spacer()\n\n\t\t\tself.back = mc.button(\n\t\t\t\tlabel=\"Go back\",\n\t\t\t\tenable=False,\n\t\t\t)\n\t\t\tself.forward = mc.button(\n\t\t\t\tlabel=\"Continue\",\n\t\t\t)\n\n\t\t\tmc.setParent('..')\n\n\t\t\tmc.formLayout(\n\t\t\t\tcontrol_parent,\n\t\t\t\tedit=True,\n\t\t\t\tattachForm=[\n\t\t\t\t\t(self.buttonGroup, 'left', 5),\n\t\t\t\t\t(self.buttonGroup, 'bottom', 1),\n\t\t\t\t\t(self.buttonGroup, 'right', 5),\n\t\t\t\t],\n\t\t\t\tattachControl=[\n\t\t\t\t\t(alignBottom, 'bottom', 5, self.buttonGroup),\n\t\t\t\t],\n\t\t\t)\n\t\t\tmc.setParent('..')\n\n\t\tdef backEnable(self):\n\t\t\tself._setBack(True)\n\t\tdef backDisable(self):\n\t\t\tself._setBack(False)\n\n\t\tdef forwardEnable(self):\n\t\t\tself._setForward(True)\n\t\tdef forwardDisable(self):\n\t\t\tself._setForward(False)\n\t\tdef forwardLabel(self, text):\n\t\t\tself._setForward(label=text)\n\n\t\tdef _setBack(self, enable=None):\n\t\t\tif enable is not None:\n\t\t\t\tmc.button(\n\t\t\t\t\tself.back,\n\t\t\t\t\tedit=True,\n\t\t\t\t\tenable=enable,\n\t\t\t\t)\n\t\tdef _setForward(self, enable=None, label=None):\n\t\t\tif enable is not None:\n\t\t\t\tmc.button(\n\t\t\t\t\tself.forward,\n\t\t\t\t\tedit=True,\n\t\t\t\t\tenable=enable,\n\t\t\t\t)\n\t\t\tif label is not None:\n\t\t\t\twidth = mc.button(\n\t\t\t\t\tself.forward,\n\t\t\t\t\tquery=True,\n\t\t\t\t\twidth=True,\n\t\t\t\t)\n\t\t\t\tmc.button(\n\t\t\t\t\tself.forward,\n\t\t\t\t\tedit=True,\n\t\t\t\t\tlabel=label,\n\t\t\t\t\twidth=width,\n\t\t\t\t)\n\t\tdef __str__(self):\n\t\t\treturn self.buttonGroup\n\n\t# Interface element generators\n\tdef spacer(self, height=None, width=None):\n\t\te = mc.text(\n\t\t\tlabel=\"\",\n\t\t)\n\t\tif height:\n\t\t\tmc.text(\n\t\t\t\te,\n\t\t\t\tedit=True,\n\t\t\t\theight=height,\n\t\t\t)\n\t\tif width:\n\t\t\tmc.text(\n\t\t\t\te,\n\t\t\t\tedit=True,\n\t\t\t\twidth=width,\n\t\t\t)\n\n\tdef getPathDialog(self):\n\t\tL.warn( \"This uses fileBrowserDialog which has been deprecated in 2011??\" )\n\t\tmaya.mel.eval( 'global string $FOUNDATION_FILEBROWSE = \"\"' )\n\t\tmaya.mel.eval( 'global proc foundation_melBrowseCallback(string $path, string $type){ global string $FOUNDATION_FILEBROWSE; $FOUNDATION_FILEBROWSE = $path; }' )\n\t\tmaya.mel.eval( 'global proc string foundation_melGetBrowsePath(){ global string $FOUNDATION_FILEBROWSE; return $FOUNDATION_FILEBROWSE; }' )\n\t\tmaya.mel.eval( 'fileBrowser \"foundation_melBrowseCallback\" \"Current Project\" \"\" 4;' )\n\t\tpath = maya.mel.eval( 'foundation_melGetBrowsePath()' )\n\t\tif path:\n\t\t\treturn path\n\n\tclass StepElement(object):\n\t\tdef __init__(self, owner, parent, label, enable=None):\n\t\t\tself.panel = mc.rowLayout(\n\t\t\t\tnumberOfColumns=2,\n\t\t\t\tcolumnWidth=[1,owner.prefs.pageEntryButtonSeparation],\n\t\t\t\tparent=parent,\n\t\t\t)\n\t\t\t#mc.radioCollection()\n\t\t\tself.radio = mc.radioButton(\n\t\t\t\tlabel=\"\",\n\t\t\t\teditable=False,\n\t\t\t\tcollection=\"steps\",\n\t\t\t)\n\t\t\tmc.text(\n\t\t\t\tlabel=label,\n\t\t\t\tfont='boldLabelFont',\n\t\t\t)\n\t\t\tmc.setParent('..')\n\t\t\tmc.setParent('..')\n\n\t\t\tif enable is not None:\n\t\t\t\tself._setStatus(enable)\n\n\t\tdef disable(self):\n\t\t\tself._setStatus(False)\n\t\tdef enable(self):\n\t\t\tself._setStatus(True)\n\t\tdef _setStatus(self, bool):\n\t\t\tmc.layout(\n\t\t\t\tself.panel,\n\t\t\t\tedit=True,\n\t\t\t\tenable=bool,\n\t\t\t)\n\t\t\tif bool:\n\t\t\t\tL.debug( \"Selecting radio button '%s'\" % self.radio )\n\t\t\t\tmc.radioButton(\n\t\t\t\t\tself.radio,\n\t\t\t\t\tedit=True,\n\t\t\t\t\tselect=True,\n\t\t\t\t)\n\t\tdef __str__(self):\n\t\t\treturn self.panel\n\n\tdef _t(self):\n\t\t\"\"\"UI sanity test\"\"\"\n\t\ttest = mc.text(label=\"test string ui object\")\n\t\tif len( test.split(\"|\") ) == 3:\n\t\t\tmc.text(test, edit=True, label=\"\")\n\t\telse:\n\t\t\tprint \"Error in test:\", test\n\n\tdef bindButton(self, control, action):\n\t\tmc.button(\n\t\t\tcontrol,\n\t\t\tedit=True,\n\t\t\tcommand=action\n\t\t)\n\n\tdef bindTextFieldButtonGrp(self, control, button_action, change_action):\n\t\tmc.textFieldButtonGrp(\n\t\t\tcontrol,\n\t\t\tedit=True,\n\t\t\tbuttonCommand=button_action,\n\t\t\tchangeCommand=change_action,\n\t\t\tforceChangeCommand=True,\n\t\t)\n\n\tdef bindFrameLayout(self, control, pcc=None, pec=None):\n\t\tif pcc:\n\t\t\tmc.frameLayout(\n\t\t\t\tcontrol,\n\t\t\t\tedit=True,\n\t\t\t\tpreCollapseCommand=pcc,\n\t\t\t)\n\t\tif pec:\n\t\t\tmc.frameLayout(\n\t\t\t\tcontrol,\n\t\t\t\tedit=True,\n\t\t\t\tpreExpandCommand=pec,\n\t\t\t)\n\n\nclass Controller:\n\tdef __init__(self):\n\t\tself.model = Model()\n\t\tself.view = View()\n\t\tself.page = 1\n\n\t\tself.bindEvents()\n\t\tself.subscribe()\n\n\t\t## HACKED AUTO PROGRESS ##\n\t\t#self._setPath(\"/Users/gaggle/Projects/Shared Script/\")\n\n\tdef bindEvents(self):\n\t\t\"\"\"Bind View elements to controller Events\"\"\"\n\t\ttry:\n\t\t\tself.view.bindButton(\n\t\t\t\tself.view.introductionPanel.webbutton,\n\t\t\t\tself.GoToWebsite\n\t\t\t)\n\n\t\t\tself.view.bindButton(\n\t\t\t\tself.view.buttonGroup.back,\n\t\t\t\tself.GoBack\n\t\t\t)\n\n\t\t\tself.view.bindButton(\n\t\t\t\tself.view.buttonGroup.forward,\n\t\t\t\tself.GoForward\n\t\t\t)\n\n\t\t\tself.view.bindTextFieldButtonGrp(\n\t\t\t\tself.view.selectFolderPanel.sharedFolderButtonGroup,\n\t\t\t\tself.Browse,\n\t\t\t\tself.ChangePathField,\n\t\t\t)\n\n\t\t\tself.view.bindFrameLayout(\n\t\t\t\tself.view.summaryPanel.installationFrameLayout,\n\t\t\t\tpcc=self.InstallationDetailsCollapse,\n\t\t\t\tpec=self.InstallationDetailsExpand,\n\t\t\t)\n\n\t\texcept:\n\t\t\tL.fatal( \"Error during bindings\" )\n\t\t\traise\n\n\tdef subscribe(self):\n\t\t\"\"\"Subscribe controller Events to Model messages\"\"\"\n\t\ttry:\n\t\t\tobs.subscribe(self.PathChanged, \"CHANGED FOLDER PATH\")\n\n\t\t\tobs.subscribe(self.InstallSuccess, \"INSTALLATION SUCCESSFUL\")\n\t\t\tobs.subscribe(self.InstallFail, \"INSTALLATION NO SUCH DIRECTORY\")\n\t\t\tobs.subscribe(self.InstallError, \"INSTALLATION ERROR\")\n\n\t\t\tif L.isEnabledFor(logging.INFO):\n\t\t\t\t#Subscribe to all messages from the Model.\n\t\t\t\tobs.subscribe(self.printMessage)\n\t\texcept:\n\t\t\tL.fatal( \"Error during message subscription\" )\n\t\t\traise\n\n\t# === OUTBOUND COMMANDS === #\n\tdef GoToWebsite(self, evt=None):\n\t\tself.model.openProductPage()\n\n\tdef GoBack(self, evt=None):\n\t\tL.debug( \"Controller says currentPage is '%s'...\" % self.page )\n\n\t\tif self.page == 2:\n\t\t\tself._switchToStep1()\n\t\t\tself.page = self.page - 1\n\t\telse:\n\t\t\traise Exception(\"Unknown page: %s\" % self.page)\n\n\tdef GoForward(self, evt=None):\n\t\tL.debug( \"Controller says currentPage is '%s'...\" % self.page )\n\n\t\tif self.page == 1:\n\t\t\tself._switchToStep2()\n\t\t\tself.page = self.page +1\n\t\telif self.page == 2:\n\t\t\tif self.model.sharedFolderPath is not None:\n\t\t\t\tself._installClicked()\n\t\t\t\tself.page = self.page +1\n\t\telif self.page == 3:\n\t\t\tL.debug( \"Closing window\" )\n\t\t\tself.view.closeWindow()\n\t\telse:\n\t\t\traise Exception(\"Unknown page: %s\" % self.page)\n\n\tdef Browse(self, evt=None):\n\t\t\"\"\"Run when Browse button is clicked\"\"\"\n\t\tpath = self.view.getPathDialog()\n\t\tif path is not None:\n\t\t\tself._setPath(path)\n\n\tdef ChangePathField(self, evt=None):\n\t\t\"\"\"Run when PathField is changed\"\"\"\n\t\tself._updatePathFromPathField()\n\n\tdef InstallationDetailsCollapse(self, evt=None):\n\t\t\"\"\"Run when InstallationDetail framelayout is collapsed\"\"\"\n\t\tself.view.summaryPanel.setInstallation_long( self.getInstallationStatus() )\n\n\tdef InstallationDetailsExpand(self, evt=None):\n\t\t\"\"\"Run when InstallationDetail framelayout is expanded\"\"\"\n\t\tself.view.summaryPanel.setInstallation_short( self.getInstallationStatus() )\n\n\t\tself.view.summaryPanel.spawnInstallationDetails(\n\t\t\tself.model.getLog()\n\t\t)\n\n\t# === REACTIONS TO INCOMING MESSAGES === #\n\tdef PathChanged(self, topic, action):\n\t\t\"\"\"React to CHANGED FOLDER PATH message\"\"\"\n\t\tself.view.selectFolderPanel.setPathLabel(action)\n\t\tself._autoSetForwardButtonStatus()\n\t\tif self.model.willWriteSharedUserSetup() or self.model.sharedUserSetupFile is None:\n\t\t\tself.view.selectFolderPanel.setNoFilesWrittenVisible(False)\n\t\telse:\n\t\t\tself.view.selectFolderPanel.setNoFilesWrittenVisible(True)\n\n\tdef InstallSuccess(self, topic):\n\t\t\"\"\"React to INSTALLATION SUCCESSFUL message\"\"\"\n\t\tself._switchToStep3()\n\n\tdef InstallFail(self, topic, exc):\n\t\t\"\"\"React to INSTALLATION NO SUCH DIRECTORY message\"\"\"\n\t\tmc.confirmDialog(\n\t\t\ttitle=\"Path error\",\n\t\t\tmessage=\"Looking for path '%s' gave an error. Are you sure it's the path you meant to install to?\\n\\nPlease try again with a different path or contact your nearest technical artist or network administrator\" % self.model.sharedFolderPath,\n\t\t\tbutton=\"OK\",\n\t\t\tparent=self.view.prefs.window,\n\t\t)\n\t\tself.page += -1\n\n\tdef InstallError(self, topic, exc):\n\t\t\"\"\"React to INSTALLATION ERROR message\"\"\"\n\t\t# We do nothing because this controller handles exceptions with a\n\t\t# try/except clause in the \"_installClicked\" function\n\t\tpass\n\n\tdef printMessage(self, message, data=None):\n\t\tif data:\n\t\t\tL.info( \"Controller received message '%s' containing: %s\" % (message, data) )\n\t\telse:\n\t\t\tL.info( \"Controller received message '%s'\" % message )\n\n\t# === HELPER FUNCTIONS === #\n\tdef getInstallationStatus(self):\n\t\ts = self.model.installationSuccess\n\t\tL.debug( \"getInstallationStatus returns %s\" % s )\n\t\treturn s\n\n\tdef exceptionHandler(self):\n\t\tformatted_exception = traceback.format_exc()\n\t\tL.warning( \"Controller encountered exception: %s\" % formatted_exception )\n\t\tself.model.addLog(\"Exception encountered:\\n%s\" % formatted_exception )\n\n\t\tself._switchToStep3(success=False)\n\n\tdef _updatePathFromPathField(self):\n\t\tpath = self.view.selectFolderPanel.getPathLabel()\n\t\tself._setPath(path)\n\n\tdef _setPath(self, path):\n\t\t\"\"\"Set path variable in model\"\"\"\n\t\tself.model.setSharedFolderPath(path)\n\n\tdef _switchToStep1(self, evt=None):\n\t\t\"\"\"Switch view to step1\"\"\"\n\t\tself.view.steps.step1()\n\t\tself.view.setResizeable(False)\n\n\t\tself.view.selectFolderPanel.setVisible(False)\n\t\tself.view.summaryPanel.setVisible(False)\n\t\tself.view.introductionPanel.setVisible(True)\n\n\t\tself.view.buttonGroup.backDisable()\n\t\tself.view.buttonGroup.forwardEnable()\n\t\tself.view.buttonGroup.forwardLabel(\"Continue\")\n\n\tdef _switchToStep2(self, evt=None):\n\t\t\"\"\"Switch view to step2\"\"\"\n\t\tself._updatePathFromPathField()\n\t\tself.view.steps.step2()\n\t\tself.view.setResizeable(False)\n\n\t\tself.view.introductionPanel.setVisible(False)\n\t\tself.view.summaryPanel.setVisible(False)\n\t\tself.view.selectFolderPanel.setVisible(True)\n\n\t\tself.view.buttonGroup.backEnable()\n\t\tself.view.buttonGroup.forwardLabel(\"Install\")\n\n\t\tself.view.selectFolderPanel.setPathLabel(self.model.sharedFolderPath)\n\t\tself._autoSetForwardButtonStatus()\n\n\tdef _installClicked(self, evt=None):\n\t\t\"\"\"Install button clicked\"\"\"\n\t\ttry:\n\t\t\tself._updatePathFromPathField()\n\t\t\tself.model.doInstall()\n\t\texcept:\n\t\t\tself.exceptionHandler()\n\n\tdef _switchToStep3(self, evt=None, success=True):\n\t\t\"\"\"Switch view to step3. If success if False the window will turn Red\n\t\tand display text indicating installation failure\"\"\"\n\t\tself.view.steps.step3()\n\t\tself.view.setResizeable(True)\n\n\t\tself.view.introductionPanel.setVisible(False)\n\t\tself.view.selectFolderPanel.setVisible(False)\n\t\tself.view.summaryPanel.setVisible(True)\n\n\t\tself.view.buttonGroup.backDisable()\n\t\tself.view.buttonGroup.forwardLabel(\"Close\")\n\n\t\tself.view.summaryPanel.setInstallationSuccess(success)\n\n\tdef _autoSetForwardButtonStatus(self):\n\t\t\"\"\"Enable or disable Forward button based on model's sharedFolderPath\"\"\"\n\t\tif self.model.sharedFolderPath is not None:\n\t\t\tself.view.buttonGroup.forwardEnable()\n\t\telse:\n\t\t\tself.view.buttonGroup.forwardDisable()\n\n\nclass Model:\n\tdef __init__(self):\n\t\tself.platform = getMayaPlatform()\n\t\tself.log = \"\"\n\t\tself.installationSuccess = None\n\n\t\tself.url = \"http://foundation.jonlauridsen.com\"\n\t\tself.userScriptDir = self.getUserScriptDir()\n\t\tself.userSetupFile = os.path.join(self.userScriptDir, \"userSetup.py\")\n\t\tself.foundationBootFile = os.path.join(self.userScriptDir, \"foundationBoot.py\")\n\n\t\tself.sharedFolderPath = None\n\t\tself.sharedUserSetupFile = None\n\n\tdef doInstall(self):\n\t\ttry:\n\t\t\tif self.willWriteSharedUserSetup():\n\t\t\t\tself._writeSharedUserSetup()\n\t\t\tself._writeOrAppendUserSetup()\n\t\t\tself._writeFoundationBoot()\n\t\texcept IOError, e:\n\t\t\tL.warn( \"IOError during install\" )\n\t\t\tobs.emit(\"INSTALLATION NO SUCH DIRECTORY\", traceback.format_exc())\n\t\t\tself.installationSuccess = False\n\t\texcept Exception:\n\t\t\tL.warn( \"Exception during install\" )\n\t\t\tobs.emit(\"INSTALLATION ERROR\", traceback.format_exc())\n\t\t\tself.installationSuccess = False\n\n\t\t\t# Generic exceptions are unexpected and by definition unhandled so\n\t\t\t# we end by raising them. The controller, if there is a controller,\n\t\t\t# should be able to handle generic exceptions in a sensible way for\n\t\t\t# the user.\n\t\t\traise\n\t\telse:\n\t\t\tL.info( \"Successful install\" )\n\t\t\tobs.emit(\"INSTALLATION SUCCESSFUL\")\n\t\t\tself.installationSuccess = True\n\n\tdef openProductPage(self):\n\t\twebbrowser.open(self.url)\n\t\tobs.emit(\"OPENED PRODUCT PAGE\", self.url)\n\n\tdef setSharedFolderPath(self, path):\n\t\tif path is None or path == \"\":\n\t\t\tself.sharedFolderPath = None\n\n\t\t\t# Also update sharedUserSetupFile since it is based on the\n\t\t\t# sharedFolderPath\n\t\t\tself.sharedUserSetupFile = None\n\t\telse:\n\t\t\tvalidPath = self.getValidatedNaivePath(path)\n\t\t\tself.sharedFolderPath = validPath\n\n\t\t\t# Also update sharedUserSetupFile since it is based on the\n\t\t\t# sharedFolderPath\n\t\t\tself.sharedUserSetupFile = os.path.join(\n\t\t\t\tself.sharedFolderPath, \"sharedUserSetup.py\"\n\t\t\t)\n\n\t\tobs.emit(\"CHANGED FOLDER PATH\", self.sharedFolderPath)\n\n\tdef getValidatedNaivePath(self, path):\n\t\t\"\"\"Return naive (non-tested) path that is always a folder (ends with a\n\t\tforward slash)\"\"\"\n\t\tsPath = path.strip() # First we strip leading and trailing whitespaces\n\t\tsPath = sPath.replace(\"\\\\\", \"/\")\n\n\t\tif sPath.endswith(\"/\"):\n\t\t\treturn sPath\n\t\telse:\n\t\t\treturn sPath + \"/\"\n\n\tdef getUserScriptDir(self):\n\t\tif self.platform == \"windows\":\n\t\t\tpath = mc.internalVar(userPrefDir=True) + 'scripts/'\n\t\telif self.platform == \"mac\":\n\t\t\tpath = mc.internalVar(userScriptDir=True)\n\t\tL.debug( \"Found script directory: '%s'\" % path )\n\t\treturn path\n\n\tdef isUserSetupValid(self):\n\t\t#self._getUserSetupContent(getFilter=True) in self._readFile(self.userSetupFile)\n\t\tcontent = readFile(self.userSetupFile, getAsLines=True)\n\t\tfilter = self._getUserSetupContent(getFilter=True)\n\t\tfor l in content:\n\t\t\tif filter in l:\n\t\t\t\tif not l.startswith(\"#\"):\n\t\t\t\t\treturn True\n\t\treturn False\n\n\tdef _writeOrAppendUserSetup(self):\n\t\tif os.path.exists(self.userSetupFile):\n\t\t\tif self.isUserSetupValid():\n\t\t\t\tpass\n\t\t\t\t#self.addLog(\"Skipped file as it's already valid:\\n%s\" % self.userSetupFile)\n\t\t\telse:\n\t\t\t\tfile = writeFile(\n\t\t\t\t\tself.userSetupFile, self._getUserSetupContent(), mode=\"a\"\n\t\t\t\t)\n\t\t\t\tself.addLog(\"Appended boot information to file:\\n%s\" % self.userSetupFile)\n\t\t\t\tobs.emit(\"PROCESSED USER SETUP\", file)\n\n\t\telse:\n\t\t\tfile = writeFile(\n\t\t\t\tself.userSetupFile, self._getUserSetupContent()\n\t\t\t)\n\t\t\tself.addLog(\"Created file:\\n%s\" % file)\n\t\t\tobs.emit(\"PROCESSED USER SETUP\", file)\n\n\tdef _writeFoundationBoot(self):\n\t\tif os.path.exists(self.foundationBootFile):\n\t\t\tpreexist = True\n\t\telse:\n\t\t\tpreexist = False\n\n\t\tfile = writeFile(\n\t\t\tself.foundationBootFile, self._getFoundationBootContent()\n\t\t)\n\n\t\tif preexist:\n\t\t\tself.addLog(\"Overwrote file:\\n%s\" % file)\n\t\telse:\n\t\t\tself.addLog(\"Created file:\\n%s\" % file)\n\n\t\tobs.emit(\"WROTE FOUNDATION BOOT\", file)\n\n\tdef _writeSharedUserSetup(self):\n\t\tfile = writeFile(\n\t\t\tself.sharedUserSetupFile, self._getSharedUserSetupContent()\n\t\t)\n\t\tself.addLog(\"Created file:\\n%s\" % file)\n\t\tobs.emit(\"WROTE SHARED USER SETUP\", file)\n\n\tdef willWriteSharedUserSetup(self):\n\t\tif self.sharedUserSetupFile is None:\n\t\t\treturn False\n\n\t\tif os.path.exists(self.sharedUserSetupFile):\n\t\t\treturn False\n\t\telse:\n\t\t\treturn True\n\n\tdef _getUserSetupContent(self, getFilter=False):\n\t\tc = \"import foundationBoot\"\n\t\tadditionalInfo = \" # Initialize maya foundation booter. This line added %s\" % (\n\t\t\tdatetime.datetime.now()\n\t\t)\n\t\tif getFilter:\n\t\t\treturn c\n\t\treturn c + additionalInfo\n\n\tdef _getFoundationBootContent(self):\n\t\tc = '''\n\t\t#!/usr/bin/env python\n\t\t#\n\t\t# foundation_boot.py\n\t\t# mayaPyTools\n\t\t#\n\t\t\"\"\"Bootstrap module for loading scripts from the Shared Scripting folder.\n\t\tGenerated by the installer, edit at your own risk\"\"\"\n\n\t\timport sys, os\n\n\t\tdef getToolPath():\n\t\t\t\"\"\"Return shared folder path.\n\n\t\t\tThis variable is set through the installer\"\"\"\n\t\t\tpath = '%s'\n\t\t\treturn path\n\n\t\tdef startModules():\n\t\t\t\"\"\"Look for sharedUserSetup.py and import it if possible\"\"\"\n\t\t\ttry:\n\t\t\t\timport sharedUserSetup\n\t\t\texcept ImportError, e:\n\t\t\t\timport traceback\n\t\t\t\timport maya.utils\n\t\t\t\tstack = traceback.format_exc()\n\t\t\t\tmaya.utils.executeDeferred( reportErrorDuringLoad, e, stack )\n\n\t\tdef reportErrorDuringLoad(e, stack):\n\t\t\tprint stack,\n\t\t\timport maya.OpenMaya\n\t\t\tmsg = \"maya foundation failed to start: %%s\" %% e\n\t\t\tmaya.OpenMaya.MGlobal.displayError(msg)\n\n\t\tsys.path.append( getToolPath() )\n\t\tstartModules()\n\t\t''' % self.sharedFolderPath\n\t\treturn formatBlock(c)\n\n\tdef _getSharedUserSetupContent(self):\n\t\tc = '''\n\t\t#!/usr/bin/env python\n\t\t#\n\t\t# sharedUserSetup.py\n\t\t# mayaPyTools\n\t\t\"\"\"sharedUserSetup.py acts like userSetup.py in that Maya executes any commands\n\t\tin the file during startup.\n\n\t\tThe below text is copied from Maya's documentation:\n\n\t\tMaya runs any Python commands in the sharedUserSetup.py file whenever it starts\n\t\tup. You can use this file to set up your working environment or execute commonly\n\t\tused Python commands such as importing the maya.cmds module.\n\n\t\tThe sharedUserSetup.py script is executed during the initialization and setup\n\t\tphase of Maya; therefore, only commands which set up your working environment\n\t\tand have no dependencies on Maya functionality can be successfully run in this\n\t\tscript.\n\n\t\tNote: You can use maya.utils.executeDeferred() to delay code execution until\n\t\tafter the Maya scene is initialized. For more information, see maya.utils.\n\t\t\"\"\"\n\t\t################################################################################\n\t\t# IMPORT BLOCK\n\t\timport maya.utils\n\n\t\t# Instantiate logger class\n\t\timport logging\n\t\tL = logging.getLogger( __name__ )\n\t\tL.setLevel(logging.INFO)\n\t\tif not L.handlers:\n\t\t\tch = logging.StreamHandler()\n\t\t\tch.setFormatter( logging.Formatter(\"%(name)s : %(levelname)s : %(message)s\") )\n\t\t\tL.addHandler(ch)\n\t\t# HOW TO USE THE LOGGER:\n\t\t# Instead of \"print\" use the following code snippets:\n\t\t# L.debug(\"Debug message\")\n\t\t# L.info(\"Info)\n\t\t# L.warn(\"A warning, but nothing we can't handle...\")\n\t\t# L.error(\"An error has occured, time to take drastic measures\")\n\t\t# L.fatal(\"A problem so huge we can't do anything but fail the entire program!\")\n\t\t#\n\t\t# By changing the level of the logger you can decide how much information to\n\t\t# print out. E.g.:\n\t\t# L.setLevel(logging.DEBUG) - Logging messages above the setLevel threshhold\n\t\t# is printed, in this case all messages would be printed.\n\n\t\t################################################################################\n\t\t# FUNCTIONS BLOCK\n\t\tdef executedDeferred():\n\t\t\t\"\"\"These commands are run after Maya is done initializing, so here we do\n\t\t\thave full access to Maya functionality\"\"\"\n\t\t\t#exampleFunction() # Uncomment this to run this function during startup\n\t\t\treportLoaded()\n\n\t\tdef reportLoaded():\n\t\t\tL.info( \"Loaded\" )\n\n\t\tdef exampleFunction():\n\t\t\t\"\"\"Simple test function\"\"\"\n\t\t\tprint \"HELLO WORLD! You can see this message in the script output window\"\n\n\n\t\t################################################################################\n\t\t# COMMANDS BLOCK\n\t\tmaya.utils.executeDeferred( executedDeferred )\n\t\t'''\n\t\treturn formatBlock(c)\n\n\tdef addLog(self, entry):\n\t\tl = self.log\n\t\tif l:\n\t\t\tl = l + \"\\n\\n\"\n\t\tself.log = l + entry\n\n\tdef getLog(self):\n\t\treturn self.log\n\n\n## HELPFUL FUNCTIONS ##\ndef readFile(filepath, getAsLines=False):\n\t\"\"\"Return content of filepath\"\"\"\n\tf = open(filepath, \"r\")\n\ttry:\n\t\tif getAsLines:\n\t\t\tc = f.readlines()\n\t\telse:\n\t\t\tc = f.read()\n\tfinally:\n\t\tf.close()\n\treturn c\n\ndef writeFile(filepath, content, mode=\"w\"):\n\t\"\"\"Write content to filepath. Return filepath\"\"\"\n\tf = open(filepath, mode)\n\n\tif mode == \"a\":\n\t\tcontent = \"\\n\" + content\n\n\ttry:\n\t\tf.write( content )\n\tfinally:\n\t\tf.close()\n\tL.info( \"Created file '%s'\" % filepath )\n\treturn filepath\n\ndef getMayaPlatform():\n\t\"\"\"Return platform as string: 'mac' or 'windows'\"\"\"\n\tif mc.about(windows=True):\n\t\treturn \"windows\"\n\telif mc.about(mac=True):\n\t\treturn \"mac\"\n\telse:\n\t\traise UnknownPlatformException()\n\n## {{{ http://code.activestate.com/recipes/145672/ (r1)\ndef formatBlock(block):\n\t'''Format the given block of text, trimming leading/trailing\n\tempty lines and any leading whitespace that is common to all lines.\n\tThe purpose is to let us list a code block as a multiline,\n\ttriple-quoted Python string, taking care of indentation concerns.'''\n\t# separate block into lines\n\tlines = str(block).split('\\n')\n\t# remove leading/trailing empty lines\n\twhile lines and not lines[0]:  del lines[0]\n\twhile lines and not lines[-1]: del lines[-1]\n\t# look at first line to see how much indentation to trim\n\tws = re.match(r'\\s*',lines[0]).group(0)\n\tif ws:\n\t\t\tlines = map( lambda x: x.replace(ws,'',1), lines )\n\t# remove leading/trailing blank lines (after leading ws removal)\n\t# we do this again in case there were pure-whitespace lines\n\twhile lines and not lines[0]:  del lines[0]\n\twhile lines and not lines[-1]: del lines[-1]\n\treturn '\\n'.join(lines)+'\\n'\n## end of http://code.activestate.com/recipes/145672/ }}}\n\n\n## DEBUGGING FUNCTIONS ##\ndef _randColor(color=None):\n\timport random\n\tif color == \"red\":\n\t\treturn [1,0,0]\n\telif color == \"green\":\n\t\treturn [0,1,0]\n\telif color == \"blue\":\n\t\treturn [0,0,1]\n\telse:\n\t\tr = random.random()\n\t\tg = random.random()\n\t\tb = random.random()\n\t\treturn [r,g,b]\n\n\n## MODULE SELF-LOADING FUNCTIONS ##\ndef wrapPyInMel(cmd):\n\tcmd = maya.cmds.encodeString(cmd)\n\tmelcmd = 'python(\\\"' + cmd + '\\\")'\n\treturn melcmd\n\ndef pathsplit( path ):\n\tbasename = os.path.basename(path)\n\tdirname = os.path.dirname(path)\n\texists = os.path.exists(path)\n\n\tif os.path.isdir(path) or basename is '':\n\t\tstrtype = 'dir'\n\t\tresult = {'type':strtype, 'exists':exists, 'path':dirname}\n\t\treturn result\n\telif os.path.isfile(path) or len(os.path.splitext(basename)) is 2:\n\t\tstrtype = 'file'\n\t\tfile = os.path.splitext(basename)[0]\n\t\text = os.path.splitext(basename)[1]\n\t\tresult = {'type':strtype, 'exists':exists, 'path':dirname, 'file':file, 'ext':ext}\n\t\treturn result\n\telse:\n\t\traise Exception, \"could not split path '\" + path + \"'\"\n\ndef loadModule(module):\n\ttry:\n\t\tfilename = module.f_code.co_filename\n\t\tfile = pathsplit(filename)['file']\n\texcept AttributeError:\n\t\tif type(module) is str:\n\t\t\tfile = module\n\t\telse:\n\t\t\traise TypeError, \"could not extract information from module of type '\" + type(module).__name__ + \"'. Provide a str or valid frame object\"\n\n\tcmd = 'import ' + file\n\tmelcmd = wrapPyInMel(cmd)\n\n\ttry:\n\t\tmaya.mel.eval(melcmd)\n\texcept ImportError:\n\t\traise ImportError, \"module '\" + file + \"' failed to be imported\"\n\texcept RuntimeError:\n\t\traise RuntimeError, \"could not evaluate Py command '\" + cmd + \"'\"\n\treturn file\n\ntry:\n\tloadModule( sys._getframe() )\nexcept (RuntimeError, AttributeError), e:\n\tprint \"Error loading module:\", e, type(e)\n\ntry:\n\tcontroller = Controller()\nexcept Exception, e:\n\tif L.isEnabledFor(logging.INFO):\n\t\ttraceback.print_exc()\n\tprint \"Error initializing installation:\", e, type(e)\n";
	return $content;
}

__foundation_runPythonInstaller__();
